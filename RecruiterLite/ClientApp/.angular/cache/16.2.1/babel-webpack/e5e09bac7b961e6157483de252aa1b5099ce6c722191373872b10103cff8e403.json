{"ast":null,"code":"var _class;\n/*\n * @Copyright The Gap Partnership. All rights reserved.\n */\nimport { inject, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { NEVER, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\nexport class BaseApiService {\n  constructor() {\n    this.baseHeaders = new HttpHeaders({\n      'Cache-Control': 'no-cache',\n      Pragma: 'no-cache'\n    });\n    // Use inject function, so extending classes don't have to provide in constructor\n    this.http = inject(HttpClient);\n    this.baseUrl = inject(API_BASE_URL);\n  }\n  get(uri, queryParams = null, handleError = true, body = null) {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n    return this.http.get(uri_, {\n      headers,\n      params\n    }).pipe(catchError(error => this.errorHandler(error, handleError)));\n  }\n  post(uri, body, queryParams = null, handleError = true) {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n    return this.http.post(uri_, body, {\n      headers,\n      params\n    }).pipe(catchError(error => this.errorHandler(error, handleError)));\n  }\n  put(uri, body, queryParams = null, handleError = true) {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n    return this.http.put(uri_, body, {\n      headers,\n      params\n    }).pipe(catchError(error => this.errorHandler(error, handleError)));\n  }\n  delete(uri, queryParams = null, handleError = true) {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n    return this.http.delete(uri_, {\n      headers,\n      params\n    }).pipe(catchError(error => this.errorHandler(error, handleError)));\n  }\n  errorHandler(error, handleError) {\n    if (handleError) {\n      console.log('caught HTTP error:', error);\n      // ToDo: do something\n      return NEVER;\n    } else {\n      // Rethrow error if we want to handle it in place of subscription.\n      return throwError(() => error);\n    }\n  }\n  static setupParams(queryParams) {\n    let params = new HttpParams();\n    if (queryParams) {\n      for (const key of Object.keys(queryParams)) {\n        if (queryParams[key] !== undefined) {\n          if (Array.isArray(queryParams[key])) {\n            const list = queryParams[key];\n            list.forEach(value => {\n              params = params.append(key, value);\n            });\n          } else {\n            params = params.append(key, queryParams[key]);\n          }\n        }\n      }\n    }\n    return params;\n  }\n}\n_class = BaseApiService;\n_class.ɵfac = function BaseApiService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","InjectionToken","HttpClient","HttpHeaders","HttpParams","NEVER","throwError","catchError","API_BASE_URL","BaseApiService","constructor","baseHeaders","Pragma","http","baseUrl","get","uri","queryParams","handleError","body","headers","params","setupParams","uri_","replace","pipe","error","errorHandler","post","put","delete","console","log","key","Object","keys","undefined","Array","isArray","list","forEach","value","append","factory","ɵfac","providedIn"],"sources":["/Users/richardash/Dev/RecruiterLite/RecruiterLite/ClientApp/src/app/api/base-api-service.ts"],"sourcesContent":["/*\n * @Copyright The Gap Partnership. All rights reserved.\n */\nimport { inject, Injectable, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { NEVER, Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BaseApiService {\n  private readonly baseHeaders = new HttpHeaders({\n    'Cache-Control': 'no-cache',\n    Pragma: 'no-cache',\n  });\n\n  private http: HttpClient;\n  public baseUrl: string;\n\n  constructor() {\n    // Use inject function, so extending classes don't have to provide in constructor\n    this.http = inject(HttpClient);\n    this.baseUrl = inject(API_BASE_URL);\n  }\n\n  get<T>(uri: string, queryParams: any = null, handleError: boolean = true, body: any = null): Observable<T> {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n\n    return this.http\n      .get<T>(uri_, { headers, params })\n      .pipe(catchError((error: HttpErrorResponse) => this.errorHandler(error, handleError)));\n  }\n\n  post<T>(uri: string, body: any, queryParams: any = null, handleError: boolean = true): Observable<T> {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n\n    return this.http\n      .post<T>(uri_, body, { headers, params })\n      .pipe(catchError((error: HttpErrorResponse) => this.errorHandler(error, handleError)));\n  }\n\n  put<T>(uri: string, body: any, queryParams: any = null, handleError: boolean = true): Observable<T> {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n\n    return this.http\n      .put<T>(uri_, body, { headers, params })\n      .pipe(catchError((error: HttpErrorResponse) => this.errorHandler(error, handleError)));\n  }\n\n  delete<T>(uri: string, queryParams: any = null, handleError: boolean = true): Observable<T> {\n    const headers = this.baseHeaders;\n    const params = BaseApiService.setupParams(queryParams);\n    const uri_ = (this.baseUrl + uri).replace(/[?&]$/, '');\n\n    return this.http\n      .delete<T>(uri_, { headers, params })\n      .pipe(catchError((error: HttpErrorResponse) => this.errorHandler(error, handleError)));\n  }\n\n  private errorHandler(error: HttpErrorResponse, handleError: boolean): Observable<never> {\n    if (handleError) {\n      console.log('caught HTTP error:', error);\n      // ToDo: do something\n      return NEVER;\n    } else {\n      // Rethrow error if we want to handle it in place of subscription.\n      return throwError(() => error);\n    }\n  }\n\n  private static setupParams(queryParams: any): HttpParams {\n    let params = new HttpParams();\n    if (queryParams) {\n      for (const key of Object.keys(queryParams)) {\n        if (queryParams[key] !== undefined) {\n          if (Array.isArray(queryParams[key])) {\n            const list = queryParams[key] as Array<string | number | boolean>;\n            list.forEach((value) => {\n              params = params.append(key, value);\n            });\n          } else {\n            params = params.append(key, queryParams[key]);\n          }\n        }\n      }\n    }\n    return params;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}