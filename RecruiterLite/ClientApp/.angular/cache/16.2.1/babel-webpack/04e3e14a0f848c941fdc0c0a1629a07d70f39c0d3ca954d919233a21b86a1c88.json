{"ast":null,"code":"var _class;\nimport { Subject, takeUntil, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./store/candidates.facade\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../shared/spinner/spinner.component\";\nfunction CandidatesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-spinner\", 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CandidatesComponent_div_2_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function CandidatesComponent_div_2_ul_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onDeleteCandidate());\n    });\n    i0.ɵɵtext(6, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const candidate_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", candidate_r3.firstName, \"\\u00A0\", candidate_r3.lastName, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\", \", candidate_r3.email, \" \");\n  }\n}\nfunction CandidatesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CandidatesComponent_div_2_ul_1_Template, 7, 3, \"ul\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.candidates);\n  }\n}\nexport class CandidatesComponent {\n  constructor(candidatesFacade, cdf) {\n    this.candidatesFacade = candidatesFacade;\n    this.cdf = cdf;\n    this.unsubscribe$ = new Subject();\n    this.candidates = [];\n    this.loadingCandidates$ = this.candidatesFacade.loadingCandidates$;\n  }\n  ngOnInit() {\n    this.candidatesFacade.loadCandidates();\n    this.candidatesFacade.candidates$.pipe(tap(candidates => {\n      if (candidates) {\n        this.candidates = candidates;\n      }\n    }), takeUntil(this.unsubscribe$)).subscribe();\n  }\n  onUpdateCandidate() {\n    let updatedCandidate = {\n      firstName: \"Test\",\n      lastName: \"Candidate\",\n      email: \"testcandidate@gmail.com\",\n      phoneNumber: \"123456789\",\n      streetAddress: \"10 beak street\",\n      postCode: \"W12LE\",\n      county: \"London\",\n      country: \"United Kingdom\",\n      companyId: 2\n    };\n    this.candidatesFacade.saveCandidate(updatedCandidate);\n  }\n  onDeleteCandidate(id) {\n    id && this.candidatesFacade.deleteCandidate(+id);\n  }\n}\n_class = CandidatesComponent;\n_class.ɵfac = function CandidatesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CandidatesFacade), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-candidates\"]],\n  decls: 7,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [3, \"click\"], [\"message\", \"Loading candidates...\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CandidatesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CandidatesComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, CandidatesComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementStart(4, \"div\")(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CandidatesComponent_Template_button_click_5_listener() {\n        return ctx.onUpdateCandidate();\n      });\n      i0.ɵɵtext(6, \"Update Candidate\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.loadingCandidates$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(3, 4, ctx.loadingCandidates$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.SpinnerComponent, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["Subject","takeUntil","tap","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","CandidatesComponent_div_2_ul_1_Template_button_click_5_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","onDeleteCandidate","ɵɵadvance","ɵɵtextInterpolate2","candidate_r3","firstName","lastName","ɵɵtextInterpolate1","email","ɵɵtemplate","CandidatesComponent_div_2_ul_1_Template","ɵɵproperty","ctx_r1","candidates","CandidatesComponent","constructor","candidatesFacade","cdf","unsubscribe$","loadingCandidates$","ngOnInit","loadCandidates","candidates$","pipe","subscribe","onUpdateCandidate","updatedCandidate","phoneNumber","streetAddress","postCode","county","country","companyId","saveCandidate","id","deleteCandidate","ɵɵdirectiveInject","i1","CandidatesFacade","ChangeDetectorRef","selectors","decls","vars","consts","template","CandidatesComponent_Template","rf","ctx","CandidatesComponent_div_0_Template","CandidatesComponent_div_2_Template","CandidatesComponent_Template_button_click_5_listener","ɵɵpipeBind1"],"sources":["/Users/richardash/Dev/RecruiterLite/RecruiterLite/ClientApp/src/app/candidates/candidates.component.ts","/Users/richardash/Dev/RecruiterLite/RecruiterLite/ClientApp/src/app/candidates/candidates.component.html"],"sourcesContent":["import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport { Candidate } from \"../models/Candidate\";\nimport {CandidatesApiService} from \"./store/candidates-api.service\";\nimport {CandidatesFacade} from \"./store/candidates.facade\";\nimport {Observable, Subject, takeUntil, tap} from \"rxjs\";\n\n@Component({\n  selector: 'app-candidates',\n  templateUrl: './candidates.component.html',\n})\nexport class CandidatesComponent implements OnInit {\n  public unsubscribe$: Subject<void> = new Subject();\n  constructor(private readonly candidatesFacade: CandidatesFacade, private readonly cdf: ChangeDetectorRef) {}\n\n  public candidates: Candidate[] = [];\n  public loadingCandidates$ = this.candidatesFacade.loadingCandidates$;\n  ngOnInit(): void {\n    this.candidatesFacade.loadCandidates();\n    this.candidatesFacade.candidates$\n      .pipe(\n        tap((candidates: Candidate[] | null) => {\n          if (candidates) {\n            this.candidates = candidates;\n          }\n        }),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe();\n  }\n\n  onUpdateCandidate() {\n    let updatedCandidate = {\n      firstName: \"Test\",\n      lastName: \"Candidate\",\n      email: \"testcandidate@gmail.com\",\n      phoneNumber: \"123456789\",\n      streetAddress: \"10 beak street\",\n      postCode: \"W12LE\",\n      county: \"London\",\n      country: \"United Kingdom\",\n      companyId: 2\n    }\n    this.candidatesFacade.saveCandidate(updatedCandidate);\n  }\n  onDeleteCandidate(id: string | number | undefined) {\n    id && this.candidatesFacade.deleteCandidate(+id);\n  }\n}\n","<div *ngIf=\"(loadingCandidates$ | async)\">\n  <app-spinner message=\"Loading candidates...\"></app-spinner>\n</div>\n<div *ngIf=\"!(loadingCandidates$ | async)\">\n  <ul *ngFor=\"let candidate of candidates\">\n    <li><strong>{{candidate.firstName}}&nbsp;{{candidate.lastName}}</strong>, {{candidate.email}}  <button (click)=\"onDeleteCandidate()\">Delete</button>\n  </ul>\n</div>\n<div>\n  <button (click)=\"onUpdateCandidate()\">Update Candidate</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}